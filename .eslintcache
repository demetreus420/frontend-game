[{"/home/demetreus/Documents/demetreus420/src/App.js":"1","/home/demetreus/Documents/demetreus420/src/index.js":"2","/home/demetreus/Documents/demetreus420/src/components/Menu.js":"3","/home/demetreus/Documents/demetreus420/src/components/Tetris.js":"4","/home/demetreus/Documents/demetreus420/src/gameHelpers.js":"5","/home/demetreus/Documents/demetreus420/src/components/StartButton.js":"6","/home/demetreus/Documents/demetreus420/src/components/styles/StyledTetrisWrapper.js":"7","/home/demetreus/Documents/demetreus420/src/hooks/usePlayer.js":"8","/home/demetreus/Documents/demetreus420/src/components/Cell.js":"9","/home/demetreus/Documents/demetreus420/src/components/styles/StyledCell.js":"10","/home/demetreus/Documents/demetreus420/src/components/MenuBar.js":"11","/home/demetreus/Documents/demetreus420/src/components/Display.js":"12","/home/demetreus/Documents/demetreus420/src/hooks/useInterval.js":"13","/home/demetreus/Documents/demetreus420/src/hooks/useGameStatus.js":"14","/home/demetreus/Documents/demetreus420/src/components/styles/StyledDisplay.js":"15","/home/demetreus/Documents/demetreus420/src/tetrominos.js":"16"},{"size":1126,"mtime":1606302537059,"results":"17","hashOfConfig":"18"},{"size":168,"mtime":1606302537059,"results":"19","hashOfConfig":"18"},{"size":463,"mtime":1606302537059,"results":"20","hashOfConfig":"18"},{"size":4214,"mtime":1606302537059,"results":"21","hashOfConfig":"18"},{"size":1613,"mtime":1606302537059,"results":"22","hashOfConfig":"18"},{"size":539,"mtime":1606302537059,"results":"23","hashOfConfig":"18"},{"size":220,"mtime":1606302537059,"results":"24","hashOfConfig":"18"},{"size":1640,"mtime":1606302537059,"results":"25","hashOfConfig":"18"},{"size":358,"mtime":1606302537059,"results":"26","hashOfConfig":"18"},{"size":509,"mtime":1606302537059,"results":"27","hashOfConfig":"18"},{"size":119,"mtime":1606302537059,"results":"28","hashOfConfig":"18"},{"size":214,"mtime":1606302537059,"results":"29","hashOfConfig":"18"},{"size":491,"mtime":1606302537059,"results":"30","hashOfConfig":"18"},{"size":720,"mtime":1606302537059,"results":"31","hashOfConfig":"18"},{"size":426,"mtime":1606302537059,"results":"32","hashOfConfig":"18"},{"size":880,"mtime":1606302537059,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1rfg33p",{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"41","messages":"42","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"62","messages":"63","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/demetreus/Documents/demetreus420/src/App.js",[],"/home/demetreus/Documents/demetreus420/src/index.js",[],["68","69"],"/home/demetreus/Documents/demetreus420/src/components/Menu.js",[],"/home/demetreus/Documents/demetreus420/src/components/Tetris.js",["70","71"],"import React, { useState } from 'react';\n\nimport { createStage, checkCollision } from '../gameHelpers';\nimport { StyledTetris } from './styles/StyledTetris';\nimport { StyledTetrisWrapper } from './styles/StyledTetrisWrapper';\n// Custom Hooks\nimport { useInterval } from '../hooks/useInterval';\nimport { usePlayer } from '../hooks/usePlayer';\nimport { useStage } from '../hooks/useStage';\nimport { useGameStatus } from '../hooks/useGameStatus';\n\n// Components\nimport Stage from './Stage';\nimport Display from './Display';\nimport StartButton from './StartButton';\n\nconst Tetris = ({ PLAYER_TYPE, changeSecond, changeFirst }) => {\n  const [dropTime, setDropTime] = useState(null);\n  const [gameOver, setGameOver] = useState(false);\n  const [player, updatePlayerPos, resetPlayer, playerRotate] = usePlayer();\n  const [stage, setStage, rowsCleared] = useStage(player, resetPlayer);\n  const [score, setScore, rows, setRows, level, setLevel] = useGameStatus(\n    rowsCleared\n  );\n\n  console.log('re-render');\n\n  const movePlayer = (dir) => {\n    if (!checkCollision(player, stage, { x: dir, y: 0 })) {\n      updatePlayerPos({ x: dir, y: 0 });\n    }\n  };\n\n  const keyUp = ({ keyCode }) => {\n    if (!gameOver) {\n      // Activate the interval again when user releases down arrow.\n      if (keyCode === 40) {\n        setDropTime(1000 / (level + 1));\n      }\n    }\n  };\n\n  const startGame = () => {\n    // Reset everything\n    setStage(createStage());\n    setDropTime(1000);\n    resetPlayer();\n    setScore(0);\n    setLevel(0);\n    setRows(0);\n    setGameOver(false);\n  };\n\n  const drop = () => {\n    // Increase level when player has cleared 10 rows\n    if (rows > (level + 1) * 10) {\n      setLevel((prev) => prev + 1);\n      // Also increase speed\n      setDropTime(1000 / (level + 1) + 200);\n    }\n\n    if (!checkCollision(player, stage, { x: 0, y: 1 })) {\n      updatePlayerPos({ x: 0, y: 1, collided: false });\n    } else {\n      // Game over!\n      if (player.pos.y < 1) {\n        console.log(PLAYER_TYPE, '!!!');\n        if (PLAYER_TYPE === 'single') {\n          score > localStorage['player1'] ||\n          localStorage['player1'] === undefined\n            ? (localStorage['player1'] = score) && changeFirst(score)\n            : console.log(score);\n        } else if (PLAYER_TYPE === 'multi') {\n          score > localStorage['player2'] ||\n          localStorage['player2'] === undefined && changeSecond(score)\n            ? (localStorage['player2'] = score)\n            : console.log(score);\n        }\n        \n        setGameOver(true);\n        setDropTime(null);\n      }\n      updatePlayerPos({ x: 0, y: 0, collided: true });\n    }\n  };\n\n  const dropPlayer = () => {\n    setDropTime(null);\n    drop();\n  };\n\n  // This one starts the game\n  // Custom hook by Dan Abramov\n  useInterval(() => {\n    drop();\n  }, dropTime);\n\n  const move = ({ keyCode }) => {\n    if (!gameOver) {\n      if (PLAYER_TYPE === 'single') {\n        if (keyCode === 65) {\n          movePlayer(-1);\n        } else if (keyCode === 68) {\n          movePlayer(1);\n        } else if (keyCode === 83) {\n          dropPlayer();\n        } else if (keyCode === 87) {\n          playerRotate(stage, 1);\n        }\n      } else {\n        if (keyCode === 37) {\n          movePlayer(-1);\n        } else if (keyCode === 39) {\n          movePlayer(1);\n        } else if (keyCode === 40) {\n          dropPlayer();\n        } else if (keyCode === 38) {\n          playerRotate(stage, 1);\n        }\n      }\n    }\n  };\n\n  return (\n    <StyledTetrisWrapper\n      role='button'\n      tabIndex='0'\n      onKeyDown={(e) => move(e)}\n      onKeyUp={keyUp}\n    >\n      <StyledTetris>\n        <Stage stage={stage} />\n        <aside className='side-block'>\n          {gameOver ? (\n            <Display gameOver={gameOver} text='Game Over' />\n          ) : (\n            <div>\n              <Display text={`Score- ${score}`} />\n              <Display text={`rows- ${rows}`} />\n              <Display text={`Level- ${level}`} />\n            </div>\n          )}\n          <StartButton callback={startGame} />\n        </aside>\n      </StyledTetris>\n      <h1>{PLAYER_TYPE === 'single' ? 'PLAYER-1' : 'PLAYER-2'}</h1>\n    </StyledTetrisWrapper>\n  );\n};\n\nexport default Tetris;\n","/home/demetreus/Documents/demetreus420/src/gameHelpers.js",[],"/home/demetreus/Documents/demetreus420/src/components/StartButton.js",[],"/home/demetreus/Documents/demetreus420/src/components/styles/StyledTetrisWrapper.js",[],"/home/demetreus/Documents/demetreus420/src/hooks/usePlayer.js",[],"/home/demetreus/Documents/demetreus420/src/components/Cell.js",[],"/home/demetreus/Documents/demetreus420/src/components/styles/StyledCell.js",[],"/home/demetreus/Documents/demetreus420/src/components/MenuBar.js",[],"/home/demetreus/Documents/demetreus420/src/components/Display.js",[],"/home/demetreus/Documents/demetreus420/src/hooks/useInterval.js",[],"/home/demetreus/Documents/demetreus420/src/hooks/useGameStatus.js",["72"],"/home/demetreus/Documents/demetreus420/src/components/styles/StyledDisplay.js",[],"/home/demetreus/Documents/demetreus420/src/tetrominos.js",[],{"ruleId":"73","replacedBy":"74"},{"ruleId":"75","replacedBy":"76"},{"ruleId":"77","severity":1,"message":"78","line":74,"column":43,"nodeType":"79","messageId":"80","endLine":74,"endColumn":45},{"ruleId":"77","severity":1,"message":"78","line":75,"column":49,"nodeType":"79","messageId":"80","endLine":75,"endColumn":51},{"ruleId":"81","severity":1,"message":"82","line":8,"column":9,"nodeType":"83","endLine":8,"endColumn":42},"no-native-reassign",["84"],"no-negated-in-lhs",["85"],"no-mixed-operators","Unexpected mix of '||' and '&&'.","LogicalExpression","unexpectedMixedOperator","react-hooks/exhaustive-deps","The 'linePoints' array makes the dependencies of useCallback Hook (at line 17) change on every render. Move it inside the useCallback callback. Alternatively, wrap the initialization of 'linePoints' in its own useMemo() Hook.","VariableDeclarator","no-global-assign","no-unsafe-negation"]
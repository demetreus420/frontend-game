{"version":3,"sources":["components/Menu.js","components/MenuBar.js","gameHelpers.js","components/styles/StyledTetris.js","components/styles/StyledTetrisWrapper.js","tetrominos.js","hooks/useStage.js","components/styles/StyledStage.js","components/styles/StyledCell.js","components/Cell.js","components/Stage.js","components/styles/StyledDisplay.js","components/Display.js","components/StartButton.js","components/Tetris.js","hooks/usePlayer.js","hooks/useGameStatus.js","hooks/useInterval.js","App.js","index.js"],"names":["Menu","props","className","children","first","localStorage","second","MenuBar","text","createStage","Array","from","fill","checkCollision","player","stage","moveX","x","moveY","y","tetromino","length","pos","StyledTetris","styled","div","StyledTetrisWrapper","TETROMINOS","0","shape","color","I","J","L","O","S","T","Z","randomTetromino","tetrominos","randTetromino","Math","floor","random","useStage","resetPlayer","useState","setStage","rowsCleared","setRowsCleared","useEffect","updateStage","prevStage","newStage","map","row","cell","forEach","value","collided","reduce","ack","findIndex","prev","unshift","push","sweepRows","StyledStage","height","width","StyledCell","type","Cell","console","log","React","memo","Stage","StyledDisplay","gameOver","Display","StyledStartButton","button","StartButton","callback","onClick","Tetris","PLAYER_TYPE","changeSecond","changeFirst","dropTime","setDropTime","setGameOver","setPlayer","rotate","matrix","dir","mtrx","_","index","column","reverse","useCallback","STAGE_WIDTH","clonedPlayer","JSON","parse","stringify","offset","usePlayer","updatePlayerPos","playerRotate","score","setScore","rows","setRows","level","setLevel","linePoints","calcScore","useGameStatus","movePlayer","drop","undefined","dropPlayer","delay","savedCallback","useRef","current","id","setInterval","clearInterval","useInterval","role","tabIndex","onKeyDown","e","keyCode","move","onKeyUp","App","stateScores","to","path","exact","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.69ef55c6.chunk.js","sourcesContent":["import React from 'react';\n\nexport const Menu = (props) => {\n  return (\n    <div className='Menu'>\n      {props.children}\n      <div className='ScoreBoard'>\n        <div className=\"player-score\">Player-1 : {(props.first > localStorage['player1']) ? props.first: localStorage['player1']}</div>\n        <div className=\"player-score\">Player-2 : {(props.second > localStorage['player2']) ? props.second: localStorage['player2']}</div>\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\n\nexport const MenuBar = ({ text }) => {\n  return <div className='menu-bar'>{text}</div>;\n};\n","export const STAGE_WIDTH = 12;\nexport const STAGE_HEIGHT = 20;\n\nexport const createStage = () =>\n  Array.from(Array(STAGE_HEIGHT), () => Array(STAGE_WIDTH).fill([0, 'clear']));\n\nexport const checkCollision = (player, stage, { x: moveX, y: moveY }) => {\n  // THIS IS SLOWER!!!\n  // return player.tetromino.some((row, y) =>\n  //   row.some((cell, x) => {\n  //     if (cell !== 0) {\n  //       return (\n  //         !stage[y + player.pos.y + moveY] ||\n  //         !stage[y + player.pos.y + moveY][x + player.pos.x + moveX] ||\n  //         stage[y + player.pos.y + moveY][x + player.pos.x + moveX][1] !==\n  //           'clear'\n  //       );\n  //     }\n  //     return false;\n  //   })\n  // );\n\n  // Using for loops to be able to return (and break). Not possible with forEach\n  for (let y = 0; y < player.tetromino.length; y += 1) {\n    for (let x = 0; x < player.tetromino[y].length; x += 1) {\n      // 1. Check that we're on an actual Tetromino cell\n      if (player.tetromino[y][x] !== 0) {\n        if (\n          // 2. Check that our move is inside the game areas height (y)\n          // That we're not go through bottom of the play area\n          !stage[y + player.pos.y + moveY] ||\n          // 3. Check that our move is inside the game areas width (x)\n          !stage[y + player.pos.y + moveY][x + player.pos.x + moveX] ||\n          // 4. Check that the cell wer'e moving to isn't set to clear\n          stage[y + player.pos.y + moveY][x + player.pos.x + moveX][1] !==\n            'clear'\n        ) {\n          return true;\n        }\n      }\n    }\n  }\n  // 5. If everything above is false\n  return false;\n};\n","import styled from 'styled-components';\n\nexport const StyledTetris = styled.div`\n    display: flex;\n    align-items: flex-start;\n    padding: 40px;\n    margin: 0 ;\n    min-width: 600px;\n    max-width: 600px;\n\n    asside {\n        width: 100%;\n        max-width: 200px;\n        display: block;\n        padding: 0 20px;\n\n    }\n`\n","import styled from 'styled-components';\n\nexport const StyledTetrisWrapper = styled.div`\n  width: 50vw;\n  height: 100vh;\n  background: #000;\n  overflow: hidden;\n  display: flex;\n  flex-wrap: wrap;\n  align-items: center;\n`","export const TETROMINOS = {\n  0: { shape: [[0]], color: '0, 0, 0' },\n  I: {\n    shape: [[0, 'I', 0, 0], [0, 'I', 0, 0], [0, 'I', 0, 0], [0, 'I', 0, 0]],\n    color: '80, 227, 230',\n  },\n  J: { shape: [[0, 'J', 0], [0, 'J', 0], ['J', 'J', 0]], color: '36, 95, 223' },\n  L: {\n    shape: [[0, 'L', 0], [0, 'L', 0], [0, 'L', 'L']],\n    color: '223, 173, 36',\n  },\n  O: { shape: [['O', 'O'], ['O', 'O']], color: '223, 217, 36' },\n  S: { shape: [[0, 'S', 'S'], ['S', 'S', 0], [0, 0, 0]], color: '48, 211, 56' },\n  T: {\n    shape: [[0, 0, 0], ['T', 'T', 'T'], [0, 'T', 0]],\n    color: '132, 61, 198',\n  },\n  Z: { shape: [['Z', 'Z', 0], [0, 'Z', 'Z'], [0, 0, 0]], color: '227, 78, 78' },\n};\n\nexport const randomTetromino = () => {\n  const tetrominos = 'IJLOSTZ';\n  const randTetromino =\n    tetrominos[Math.floor(Math.random() * tetrominos.length)];\n  return TETROMINOS[randTetromino];\n};\n","import { useState, useEffect } from 'react';\nimport { createStage } from '../gameHelpers';\n\nexport const useStage = (player, resetPlayer) => {\n  const [stage, setStage] = useState(createStage());\n  const [rowsCleared, setRowsCleared] = useState(0);\n\n  useEffect(() => {\n    setRowsCleared(0);\n    const sweepRows = newStage =>\n      newStage.reduce((ack, row) => {\n        if (row.findIndex(cell => cell[0] === 0) === -1) {\n          setRowsCleared(prev => prev + 1);\n          ack.unshift(new Array(newStage[0].length).fill([0, 'clear']));\n          return ack;\n        }\n        ack.push(row);\n        return ack;\n      }, []);\n\n    const updateStage = prevStage => {\n      // First flush the stage\n      const newStage = prevStage.map(row =>\n        row.map(cell => (cell[1] === 'clear' ? [0, 'clear'] : cell))\n      );\n\n      // Then draw the tetromino\n      player.tetromino.forEach((row, y) => {\n        row.forEach((value, x) => {\n          if (value !== 0) {\n            newStage[y + player.pos.y][x + player.pos.x] = [\n              value,\n              `${player.collided ? 'merged' : 'clear'}`,\n            ];\n          }\n        });\n      });\n      // Then check if we got some score if collided\n      if (player.collided) {\n        resetPlayer();\n        return sweepRows(newStage);\n      }\n      return newStage;\n    };\n\n    // Here are the updates\n    setStage(prev => updateStage(prev));\n  }, [\n    player.collided,\n    player.pos.x,\n    player.pos.y,\n    player.tetromino,\n    resetPlayer,\n  ]);\n\n  return [stage, setStage, rowsCleared];\n};\n","import styled from 'styled-components';\n\nexport const StyledStage = styled.div`\n  display: grid;\n  grid-template-rows: repeat(\n    ${(props) => props.height},\n    calc(25vh / ${(props) => props.width})\n  );\n  grid-template-columns: repeat(${(props) => props.width}, 1fr);\n  grid-gap: 1px;\n  border: 8px ridge #ff0084;\n  width: 100%;\n  max-width: 20vw;\n  bgackground: #111;\n  outline: 13px ridge #00ffcc;\n  outline-offset: 0px;\n`;\n","import styled from 'styled-components';\n\nexport const StyledCell = styled.div`\n  width: auto;\n  background: rgba(${(props) => props.color}, 0.8);\n  border: ${(props) => (props.type === 0 ? '0px solid' : '4px solid')};\n  border-bottom-color: rgba(${(props) => props.color}, 0.1);\n  border-top-color: rgba(${(props) => props.color}, 1);\n  border-left-color: rgba(${(props) => props.color}, 1);\n  border-right-color: rgba(${(props) => props.color}, 0.3);\n  outline: 1px dotted orange;\n  outline-offset: -2px;\n`;\n","import React from 'react';\nimport { StyledCell } from './styles/StyledCell';\nimport { TETROMINOS } from '../tetrominos';\n\n// React.memo makes sure we only re-render the changed cells\nconst Cell = ({ type }) => (\n  <StyledCell type={type} color={TETROMINOS[type].color}>\n    {console.log('rerender cell')}\n  </StyledCell>\n);\n\nexport default React.memo(Cell);\n","import React from 'react';\nimport { StyledStage } from './styles/StyledStage';\n\nimport Cell from './Cell';\n\nconst Stage = ({ stage }) => (\n  <StyledStage width={stage[0].length} height={stage.length}>\n    {stage.map(row => row.map((cell, x) => <Cell key={x} type={cell[0]} />))}\n  </StyledStage>\n);\n\nexport default Stage;\n","import styled from 'styled-components';\n\nexport const StyledDisplay = styled.div`\n    box-sizing: border-box;\n    display: flex;\n    align-items: center;\n    margin: 0 0 20px 0;\n    padding: 20px;\n    border: 2px solid orange;\n    min-height: 30px;\n    width: 100%;\n    border-radius: 20px;\n    color: ${props => props.gameOver ? 'red' : 'greenyellow'};\n    background: transparent;\n\n    span {\n        display: block;\n    }\n`","import React from 'react';\nimport { StyledDisplay } from './styles/StyledDisplay';\n\nconst Display = ({ gameOver, text }) => (\n  <StyledDisplay gameOver={gameOver}>{text}</StyledDisplay>\n);\n\nexport default Display;\n","import React from 'react';\nimport styled from 'styled-components';\n\nconst StyledStartButton = styled.button`\n  box-sizing: border-box;\n\n  margin: 0 0 20px 0;\n  padding: 20px;\n  min-height: 30px;\n  width: 100%;\n  border-radius: 20px;\n  border: none;\n  color: white;\n  background: #333;\n  font-family: Pixel, Arial, Helvetica, sans-serif;\n  font-size: 1rem;\n  outline: none;\n  cursor: pointer;\n`;\n\nconst StartButton = ({ callback }) => (\n  <StyledStartButton onClick={callback}>Start Game</StyledStartButton>\n);\n\nexport default StartButton;\n","import React, { useState } from 'react';\n\nimport { createStage, checkCollision } from '../gameHelpers';\nimport { StyledTetris } from './styles/StyledTetris';\nimport { StyledTetrisWrapper } from './styles/StyledTetrisWrapper';\n// Custom Hooks\nimport { useInterval } from '../hooks/useInterval';\nimport { usePlayer } from '../hooks/usePlayer';\nimport { useStage } from '../hooks/useStage';\nimport { useGameStatus } from '../hooks/useGameStatus';\n\n// Components\nimport Stage from './Stage';\nimport Display from './Display';\nimport StartButton from './StartButton';\n\nconst Tetris = ({ PLAYER_TYPE, changeSecond, changeFirst }) => {\n  const [dropTime, setDropTime] = useState(null);\n  const [gameOver, setGameOver] = useState(false);\n  const [player, updatePlayerPos, resetPlayer, playerRotate] = usePlayer();\n  const [stage, setStage, rowsCleared] = useStage(player, resetPlayer);\n  const [score, setScore, rows, setRows, level, setLevel] = useGameStatus(\n    rowsCleared\n  );\n\n  console.log('re-render');\n\n  const movePlayer = (dir) => {\n    if (!checkCollision(player, stage, { x: dir, y: 0 })) {\n      updatePlayerPos({ x: dir, y: 0 });\n    }\n  };\n\n  const keyUp = ({ keyCode }) => {\n    if (!gameOver) {\n      // Activate the interval again when user releases down arrow.\n      if (keyCode === 40) {\n        setDropTime(1000 / (level + 1));\n      }\n    }\n  };\n\n  const startGame = () => {\n    // Reset everything\n    setStage(createStage());\n    setDropTime(1000);\n    resetPlayer();\n    setScore(0);\n    setLevel(0);\n    setRows(0);\n    setGameOver(false);\n  };\n\n  const drop = () => {\n    // Increase level when player has cleared 10 rows\n    if (rows > (level + 1) * 10) {\n      setLevel((prev) => prev + 1);\n      // Also increase speed\n      setDropTime(1000 / (level + 1) + 200);\n    }\n\n    if (!checkCollision(player, stage, { x: 0, y: 1 })) {\n      updatePlayerPos({ x: 0, y: 1, collided: false });\n    } else {\n      // Game over!\n      if (player.pos.y < 1) {\n        console.log(PLAYER_TYPE, '!!!');\n        if (PLAYER_TYPE === 'single') {\n          score > localStorage['player1'] ||\n          localStorage['player1'] === undefined\n            ? (localStorage['player1'] = score) && changeFirst(score)\n            : console.log(score);\n        } else if (PLAYER_TYPE === 'multi') {\n          score > localStorage['player2'] ||\n          localStorage['player2'] === undefined && changeSecond(score)\n            ? (localStorage['player2'] = score)\n            : console.log(score);\n        }\n        \n        setGameOver(true);\n        setDropTime(null);\n      }\n      updatePlayerPos({ x: 0, y: 0, collided: true });\n    }\n  };\n\n  const dropPlayer = () => {\n    setDropTime(null);\n    drop();\n  };\n\n  // This one starts the game\n  // Custom hook by Dan Abramov\n  useInterval(() => {\n    drop();\n  }, dropTime);\n\n  const move = ({ keyCode }) => {\n    if (!gameOver) {\n      if (PLAYER_TYPE === 'single') {\n        if (keyCode === 65) {\n          movePlayer(-1);\n        } else if (keyCode === 68) {\n          movePlayer(1);\n        } else if (keyCode === 83) {\n          dropPlayer();\n        } else if (keyCode === 87) {\n          playerRotate(stage, 1);\n        }\n      } else {\n        if (keyCode === 37) {\n          movePlayer(-1);\n        } else if (keyCode === 39) {\n          movePlayer(1);\n        } else if (keyCode === 40) {\n          dropPlayer();\n        } else if (keyCode === 38) {\n          playerRotate(stage, 1);\n        }\n      }\n    }\n  };\n\n  return (\n    <StyledTetrisWrapper\n      role='button'\n      tabIndex='0'\n      onKeyDown={(e) => move(e)}\n      onKeyUp={keyUp}\n    >\n      <StyledTetris>\n        <Stage stage={stage} />\n        <aside className='side-block'>\n          {gameOver ? (\n            <Display gameOver={gameOver} text='Game Over' />\n          ) : (\n            <div>\n              <Display text={`Score- ${score}`} />\n              <Display text={`rows- ${rows}`} />\n              <Display text={`Level- ${level}`} />\n            </div>\n          )}\n          <StartButton callback={startGame} />\n        </aside>\n      </StyledTetris>\n      <h1>{PLAYER_TYPE === 'single' ? 'PLAYER-1' : 'PLAYER-2'}</h1>\n    </StyledTetrisWrapper>\n  );\n};\n\nexport default Tetris;\n","import { useState, useCallback } from 'react';\n\nimport { TETROMINOS, randomTetromino } from '../tetrominos';\nimport { STAGE_WIDTH, checkCollision } from '../gameHelpers';\n\nexport const usePlayer = () => {\n  const [player, setPlayer] = useState({\n    pos: { x: 0, y: 0 },\n    tetromino: TETROMINOS[0].shape,\n    collided: false,\n  });\n\n  function rotate(matrix, dir) {\n    // Make the rows to become cols (transpose)\n    const mtrx = matrix.map((_, index) => matrix.map(column => column[index]));\n    // Reverse each row to get a rotaded matrix\n    if (dir > 0) return mtrx.map(row => row.reverse());\n    return mtrx.reverse();\n  }\n\n  function playerRotate(stage, dir) {\n    const clonedPlayer = JSON.parse(JSON.stringify(player));\n    clonedPlayer.tetromino = rotate(clonedPlayer.tetromino, dir);\n\n    const pos = clonedPlayer.pos.x;\n    let offset = 1;\n    while (checkCollision(clonedPlayer, stage, { x: 0, y: 0 })) {\n      clonedPlayer.pos.x += offset;\n      offset = -(offset + (offset > 0 ? 1 : -1));\n      if (offset > clonedPlayer.tetromino[0].length) {\n        rotate(clonedPlayer.tetromino, -dir);\n        clonedPlayer.pos.x = pos;\n        return;\n      }\n    }\n    setPlayer(clonedPlayer);\n  }\n\n  const updatePlayerPos = ({ x, y, collided }) => {\n    setPlayer(prev => ({\n      ...prev,\n      pos: { x: (prev.pos.x += x), y: (prev.pos.y += y) },\n      collided,\n    }));\n  };\n\n  const resetPlayer = useCallback(() => {\n    setPlayer({\n      pos: { x: STAGE_WIDTH / 2 - 2, y: 0 },\n      tetromino: randomTetromino().shape,\n      collided: false,\n    });\n  }, []);\n\n  return [player, updatePlayerPos, resetPlayer, playerRotate];\n};\n","import { useState, useEffect, useCallback } from 'react';\n\nexport const useGameStatus = rowsCleared => {\n  const [score, setScore] = useState(0);\n  const [rows, setRows] = useState(0);\n  const [level, setLevel] = useState(0);\n\n  const linePoints = [40, 100, 300, 1200];\n\n  const calcScore = useCallback(() => {\n    // We have score\n    if (rowsCleared > 0) {\n      // This is how original Tetris score is calculated\n      setScore(prev => prev + linePoints[rowsCleared - 1] * (level + 1));\n      setRows(prev => prev + rowsCleared);\n    }\n  }, [level, linePoints, rowsCleared]);\n\n  useEffect(() => {\n    calcScore();\n  }, [calcScore, rowsCleared, score]);\n\n  return [score, setScore, rows, setRows, level, setLevel];\n};\n","import { useEffect, useRef } from 'react';\n\nexport function useInterval(callback, delay) {\n  const savedCallback = useRef();\n  // Remember the latest callback.\n  useEffect(() => {\n    savedCallback.current = callback;\n  }, [callback]);\n\n  // Set up the interval.\n  useEffect(() => {\n    function tick() {\n      savedCallback.current();\n    }\n    if (delay !== null) {\n      const id = setInterval(tick, delay);\n      return () => {\n        clearInterval(id);\n      };\n    }\n  }, [delay]);\n}\n","import React from 'react';\nimport { BrowserRouter, Link, Route, Switch } from 'react-router-dom';\nimport { Menu } from './components/Menu';\nimport { MenuBar } from './components/MenuBar';\nimport Tetris from './components/Tetris';\n\nconst App = () => {\n  const [first, changeFirst] = React.useState();\n  const [second, changeSecond] = React.useState();\n\n  return (\n    <div className='App'>\n      <BrowserRouter>\n        <Menu stateScores={{ first: first, second: second }}>\n          <Link to='/single-player'>\n            <MenuBar text='Single Player' />\n          </Link>\n          <Link to='/two-players'>\n            <MenuBar text='Multi Player' />\n          </Link>\n        </Menu>\n        <Switch>\n          <Route path='/single-player'>\n            <Tetris PLAYER_TYPE='single' />\n          </Route>\n          <Route path='/two-players'>\n            <Tetris PLAYER_TYPE='single' changeSecond={changeSecond} />\n            <Tetris PLAYER_TYPE='multi' changeFirst={changeFirst} />\n          </Route>\n          <Route exact path='/'></Route>\n        </Switch>\n      </BrowserRouter>\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}